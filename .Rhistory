live_albums_sum_by_total_albums <- live_albums_data %>%
group_by(artist) %>%
summarize(mean_popularity = mean(popularity),
mean_live_performances = mean(total_live_performances))
# Graph 14) Scatter plot: Number of 'live' albums vs Popularity
# Filter albums with names containing 'Live' or 'live'
live_albums_data <- albums_final_data %>%
filter(str_detect(album_name, "(?i)live"))
# Sum the number of live performances and calculate the mean popularity by total_albums
live_albums_sum_by_total_albums <- live_albums_data %>%
group_by(artist) %>%
summarize(mean_popularity = mean(popularity),
mean_live_performances = mean(album_name))
# Create an interactive scatter plot
live_albums_popularity_tracks <- plot_ly(
data = live_albums_sum_by_total_albums,
x = ~mean_popularity,
y = ~mean_live_performances,
text = ~paste("Total 'Live' Albums: ", total_albums),
type = "scatter",
mode = "markers",
color = I("blue")
) %>%
layout(
title = "Graph 14. Mean Popularity vs Mean Live Performances",
xaxis = list(title = "Mean Popularity"),
yaxis = list(title = "Mean Live Performances")
)
# Print the plot
live_albums_popularity_tracks
# Graph 12) Scatter plot: Years Active vs Popularity
# Remove rows with NA values in 'total_activity'
cleaned_albums_data <- albums_final_data %>%
filter(!is.na(total_activity))
# Sum the number of activities by artist
activity_sum_by_artist <- cleaned_albums_data %>%
group_by(artist) %>%
summarize(total_activity = sum(total_activity), popularity_mean = mean(popularity))
# Sum the number of activities and calculate the mean popularity by total_activity
activity_sum_by_total_activity <- activity_sum_by_artist %>%
group_by(total_activity) %>%
summarize(mean_popularity = mean(popularity_mean))
# Create an interactive scatter plot for activity vs mean popularity
activity_popularity <- plot_ly(
data = activity_sum_by_total_activity,
x = ~mean_popularity,
y = ~total_activity,
text = ~paste("Total Activity: ", total_activity),
color = I("blue"),
type = "scatter",
mode = "markers"
) %>%
add_trace(
type = "scatter",
mode = "lines",
x = ~mean_popularity,
y = ~lm(total_activity ~ mean_popularity)$fitted.values,
line = list(color = 'red'),
name = "Regression Line"
) %>%
layout(
title = "Graph 12. Artists' Total Activity vs Mean Popularity",
xaxis = list(title = "Mean Artists' Popularity"),
yaxis = list(title = "Total Years of Activity"),
coloraxis = list(colorscale = "Viridis")
)
# Print the plot
activity_popularity
# Graph 12) Scatter plot: Years Active vs Popularity
# Remove rows with NA values in 'total_activity'
cleaned_albums_data <- albums_final_data %>%
filter(!is.na(total_activity))
# Sum the number of activities by artist
activity_sum_by_artist <- cleaned_albums_data %>%
group_by(artist) %>%
summarize(total_activity = sum(total_activity), popularity_mean = mean(popularity))
# Calculate the mean popularity without grouping by total_activity
mean_popularity <- mean(activity_sum_by_artist$popularity_mean)
# Create an interactive scatter plot for activity vs mean popularity
activity_popularity <- plot_ly(
data = activity_sum_by_artist,
x = ~popularity_mean,
y = ~total_activity,
text = ~paste("Total Activity: ", total_activity),
color = I("blue"),
type = "scatter",
mode = "markers"
) %>%
add_trace(
type = "scatter",
mode = "lines",
x = rep(mean_popularity, nrow(activity_sum_by_artist)),  # Use the overall mean for the line
y = ~lm(total_activity ~ popularity_mean, data = activity_sum_by_artist)$fitted.values,
line = list(color = 'red'),
name = "Regression Line"
) %>%
layout(
title = "Graph 12. Artists' Total Activity vs Mean Popularity",
xaxis = list(title = "Mean Artists' Popularity"),
yaxis = list(title = "Total Years of Activity"),
coloraxis = list(colorscale = "Viridis")
)
# Print the plot
activity_popularity
# Graph 12) Scatter plot: Years Active vs Popularity
# Remove rows with NA values in 'total_activity'
cleaned_albums_data <- albums_final_data %>%
filter(!is.na(total_activity))
# Sum the number of activities by artist
activity_sum_by_artist <- cleaned_albums_data %>%
group_by(artist) %>%
summarize(total_activity = sum(total_activity), popularity_mean = mean(popularity))
# Calculate the mean popularity without grouping by total_activity
mean_popularity <- mean(activity_sum_by_artist$popularity_mean)
# Calculate the mean total_activity for the line
mean_total_activity <- mean(activity_sum_by_artist$total_activity)
# Create an interactive scatter plot for activity vs mean popularity
activity_popularity <- plot_ly(
data = activity_sum_by_artist,
x = ~popularity_mean,
y = ~total_activity,
text = ~paste("Total Activity: ", total_activity),
color = I("blue"),
type = "scatter",
mode = "markers"
) %>%
add_trace(
type = "scatter",
mode = "lines",
x = rep(mean_popularity, nrow(activity_sum_by_artist)),  # Use the overall mean for the line
y = rep(mean_total_activity, nrow(activity_sum_by_artist)),  # Use the mean total_activity for the line
line = list(color = 'red'),
name = "Regression Line"
) %>%
layout(
title = "Graph 12. Artists' Total Activity vs Mean Popularity",
xaxis = list(title = "Mean Artists' Popularity"),
yaxis = list(title = "Total Years of Activity"),
coloraxis = list(colorscale = "Viridis")
)
# Print the plot
activity_popularity
# Graph 12) Scatter plot: Years Active vs Popularity
# Remove rows with NA values in 'total_activity'
cleaned_albums_data <- albums_final_data %>%
filter(!is.na(total_activity))
# Sum the number of activities by artist
activity_sum_by_artist <- cleaned_albums_data %>%
group_by(artist) %>%
summarize(total_activity = sum(total_activity), popularity_mean = mean(popularity))
# Sum the number of activities and calculate the mean popularity by total_activity
activity_sum_by_total_activity <- activity_sum_by_artist %>%
group_by(total_activity) %>%
summarize(mean_popularity = mean(popularity_mean))
# Create an interactive scatter plot for activity vs mean popularity
activity_popularity <- plot_ly(
data = activity_sum_by_total_activity,
x = ~mean_popularity,
y = ~total_activity,
text = ~paste("Total Activity: ", total_activity),
color = I("blue"),
type = "scatter",
mode = "markers"
) %>%
add_trace(
type = "scatter",
mode = "lines",
x = ~mean_popularity,
y = ~lm(total_activity ~ mean_popularity)$fitted.values,
line = list(color = 'red'),
name = "Regression Line"
) %>%
layout(
title = "Graph 12. Artists' Total Activity vs Mean Popularity",
xaxis = list(title = "Mean Artists' Popularity"),
yaxis = list(title = "Total Years of Activity"),
coloraxis = list(colorscale = "Viridis")
)
# Print the plot
activity_popularity
# Graph 12) Scatter plot: Years Active vs Popularity
# Remove rows with NA values in 'total_activity'
cleaned_albums_data <- albums_final_data %>%
filter(!is.na(total_activity))
# Sum the number of activities by artist
activity_sum_by_artist <- cleaned_albums_data %>%
group_by(artist) %>%
summarize(total_activity = sum(total_activity), popularity_mean = mean(popularity))
# Sum the number of activities and calculate the mean popularity by total_activity
activity_sum_by_total_activity <- activity_sum_by_artist %>%
group_by(total_activity) %>%
summarize(mean_popularity = mean(popularity_mean))
# Create an interactive scatter plot for activity vs mean popularity
activity_popularity <- plot_ly(
data = activity_sum_by_artist,
x = ~mean_popularity,
y = ~total_activity,
text = ~paste("Total Activity: ", total_activity),
color = I("blue"),
type = "scatter",
mode = "markers"
) %>%
add_trace(
type = "scatter",
mode = "lines",
x = ~mean_popularity,
y = ~lm(total_activity ~ mean_popularity)$fitted.values,
line = list(color = 'red'),
name = "Regression Line"
) %>%
layout(
title = "Graph 12. Artists' Total Activity vs Mean Popularity",
xaxis = list(title = "Mean Artists' Popularity"),
yaxis = list(title = "Total Years of Activity"),
coloraxis = list(colorscale = "Viridis")
)
# Print the plot
activity_popularity
View(activity_sum_by_artist)
# Sum the number of activities by artist
activity_sum_by_artist <- cleaned_albums_data %>%
group_by(artist) %>%
summarize(total_activity = n(), popularity_mean = mean(popularity))
View(activity_sum_by_artist)
cleaned_albums_data <- albums_final_data %>%
filter(!is.na(total_activity))
View(cleaned_albums_data)
# Sum the number of activities by artist
activity_sum_by_artist <- cleaned_albums_data %>%
group_by(artist) %>%
summarize(total_activity = n(), popularity_mean = mean(popularity))
View(activity_sum_by_artist)
cleaned_albums_data <- albums_final_data %>%
filter(!is.na(total_activity))
# Sum the number of activities by artist
activity_sum_by_artist <- cleaned_albums_data %>%
group_by(artist) %>%
summarize(total_activity = total_activity, popularity_mean = mean(popularity))
View(total_activity_histogram)
View(activity_sum_by_artist)
# Graph 12) Scatter plot: Years Active vs Popularity
# Remove rows with NA values in 'total_activity'
cleaned_albums_data <- albums_final_data %>%
filter(!is.na(total_activity))
# Sum the number of activities by artist
activity_sum_by_artist <- cleaned_albums_data %>%
group_by(artist) %>%
summarize(total_activity = total_activity, popularity_mean = mean(popularity))
# Sum the number of activities and calculate the mean popularity by total_activity
activity_sum_by_total_activity <- activity_sum_by_artist %>%
group_by(total_activity) %>%
summarize(mean_popularity = mean(popularity_mean))
# Create an interactive scatter plot for activity vs mean popularity
activity_popularity <- plot_ly(
data = activity_sum_by_total_activity,
x = ~mean_popularity,
y = ~total_activity,
text = ~paste("Total Activity: ", total_activity),
color = I("blue"),
type = "scatter",
mode = "markers"
) %>%
add_trace(
type = "scatter",
mode = "lines",
x = ~mean_popularity,
y = ~lm(total_activity ~ mean_popularity)$fitted.values,
line = list(color = 'red'),
name = "Regression Line"
) %>%
layout(
title = "Graph 12. Artists' Total Activity vs Mean Popularity",
xaxis = list(title = "Mean Artists' Popularity"),
yaxis = list(title = "Total Years of Activity"),
coloraxis = list(colorscale = "Viridis")
)
# Print the plot
activity_popularity
# Graph 14) Scatter plot: Number of 'live' albums vs Popularity
# Filter albums with names containing 'Live' or 'live'
live_albums_data <- albums_final_data %>%
filter(str_detect(album_name, "(?i)live"))
# Sum the number of observations for each artist
live_albums_sum_by_artist <- live_albums_data %>%
group_by(artist) %>%
summarize(total_albums = n(), popularity_mean = mean(popularity))
# Create an interactive scatter plot
live_albums_popularity_tracks <- plot_ly(
data = live_albums_sum_by_artist,
x = ~popularity_mean,
y = ~total_albums,
text = ~artist,
type = "scatter",
mode = "markers",
color = I("blue")
) %>%
add_lines(
x = ~popularity_mean,
y = ~lm(total_albums ~ popularity_mean, data = live_albums_sum_by_artist)$fitted.values,
line = list(color = 'red'),
name = "Regression Line"
) %>%
layout(
title = "Artist Popularity vs Total 'Live' Albums",
xaxis = list(title = "Artist Popularity"),
yaxis = list(title = "Total Number of 'Live' Albums")
)
# Print the plot
live_albums_popularity_tracks
live_albums_data <- albums_final_data %>%
filter(str_detect(album_name, "(?i)live"))
# Sum the number of observations for each artist
live_albums_sum_by_artist <- live_albums_data %>%
group_by(artist) %>%
summarize(total_albums = n(), popularity_mean = mean(popularity))
View(live_albums_sum_by_artist)
# Graph 14) Scatter plot: Number of 'live' albums vs Popularity
# Filter albums with names containing 'Live' or 'live'
live_albums_data <- albums_final_data %>%
filter(str_detect(album_name, "(?i)live"))
# Sum the number of observations for each artist
live_albums_sum_by_artist <- live_albums_data %>%
group_by(artist) %>%
summarize(total_albums = n(), popularity_mean = mean(popularity))
# Sum the number of activities and calculate the mean popularity by total_activity
activity_sum_by_total_activity <- activity_sum_by_artist %>%
group_by(total_albums)
# Graph 14) Scatter plot: Number of 'live' albums vs Popularity
# Filter albums with names containing 'Live' or 'live'
live_albums_data <- albums_final_data %>%
filter(str_detect(album_name, "(?i)live"))
# Sum the number of observations for each artist
live_albums_sum_by_artist <- live_albums_data %>%
group_by(artist) %>%
summarize(total_albums = n(), popularity_mean = mean(popularity))
# Sum the number of activities and calculate the mean popularity by total_activity
activity_sum_by_total_activity <- live_albums_sum_by_artist %>%
group_by(total_albums)
summarize(mean_popularity = mean(popularity_mean))
# Graph 14) Scatter plot: Number of 'live' albums vs Popularity
# Filter albums with names containing 'Live' or 'live'
live_albums_data <- albums_final_data %>%
filter(str_detect(album_name, "(?i)live"))
# Sum the number of observations for each artist
live_albums_sum_by_artist <- live_albums_data %>%
group_by(artist) %>%
summarize(total_albums = n(), popularity_mean = mean(popularity))
# Sum the number of activities and calculate the mean popularity by total_activity
activity_sum_by_total_activity <- live_albums_sum_by_artist %>%
group_by(total_albums)
summarize(mean_popularity = mean_popularity))
View(live_albums_sum_by_artist)
# Graph 14) Scatter plot: Number of 'live' albums vs Popularity
# Filter albums with names containing 'Live' or 'live'
live_albums_data <- albums_final_data %>%
filter(str_detect(album_name, "(?i)live"))
# Sum the number of observations for each artist
live_albums_sum_by_artist <- live_albums_data %>%
group_by(artist) %>%
summarize(total_albums = n(), popularity_mean = mean(popularity))
# Sum the number of activities and calculate the mean popularity by total_activity
activity_sum_by_total_activity <- live_albums_sum_by_artist %>%
group_by(total_albums)
summarize(mean_popularity = mean_popularity)
View(live_albums_sum_by_artist)
# Graph 14) Scatter plot: Number of 'live' albums vs Popularity
# Filter albums with names containing 'Live' or 'live'
live_albums_data <- albums_final_data %>%
filter(str_detect(album_name, "(?i)live"))
# Sum the number of observations for each artist
live_albums_sum_by_artist <- live_albums_data %>%
group_by(artist) %>%
summarize(total_albums = n(), popularity_mean = mean(popularity))
# Sum the number of activities and calculate the mean popularity by total_activity
activity_sum_by_total_activity <- live_albums_sum_by_artist %>%
group_by(total_albums)
summarize(mean_popularity = mean(popularity_mean))
View(live_albums_sum_by_artist)
# Graph 14) Scatter plot: Number of 'live' albums vs Popularity
# Filter albums with names containing 'Live' or 'live'
live_albums_data <- albums_final_data %>%
filter(str_detect(album_name, "(?i)live"))
# Sum the number of observations for each artist
live_albums_sum_by_artist <- live_albums_data %>%
group_by(artist) %>%
summarize(total_albums = n(), popularity_mean = mean(popularity))
# Sum the number of activities and calculate the mean popularity by total_activity
activity_sum_by_total_activity <- live_albums_sum_by_artist %>%
group_by(total_albums)
summarize(popularity_mean)
live_albums_data <- albums_final_data %>%
filter(str_detect(album_name, "(?i)live"))
# Sum the number of observations for each artist
live_albums_sum_by_artist <- live_albums_data %>%
group_by(artist) %>%
summarize(total_albums = n(), popularity_mean = mean(popularity))
# Sum the number of activities and calculate the mean popularity by total_activity
activity_sum_by_total_activity <- live_albums_sum_by_artist %>%
group_by(total_albums)
summarize(mean_popularity = mean(popularity_mean))
# Graph 14) Scatter plot: Number of 'live' albums vs Popularity
# Filter albums with names containing 'Live' or 'live'
live_albums_data <- albums_final_data %>%
filter(str_detect(album_name, "(?i)live"))
# Sum the number of observations for each artist
live_albums_sum_by_artist <- live_albums_data %>%
group_by(artist) %>%
summarize(total_albums = n(), popularity_mean = mean(popularity))
# Sum the number of activities and calculate the mean popularity by total_activity
activity_sum_by_total_activity <- live_albums_sum_by_artist %>%
group_by(total_albums)
summarize(popularity_mean = mean(popularity_mean))
# Graph 14) Scatter plot: Number of 'live' albums vs Popularity
# Filter albums with names containing 'Live' or 'live'
# Filter albums with names containing 'Live' or 'live'
live_albums_data <- albums_final_data %>%
filter(str_detect(album_name, "(?i)live"))
# Sum the number of observations for each artist
live_albums_sum_by_artist <- live_albums_data %>%
group_by(artist) %>%
summarize(total_albums = n(), popularity_mean = mean(popularity))
# Sum the number of activities and calculate the mean popularity by total_activity
activity_sum_by_total_activity <- live_albums_sum_by_artist %>%
group_by(total_albums) %>%
summarize(popularity_mean = mean(popularity_mean))
# Create an interactive scatter plot
live_albums_popularity_tracks <- plot_ly(
data = live_albums_sum_by_artist,
x = ~popularity_mean,
y = ~total_albums,
text = ~artist,
type = "scatter",
mode = "markers",
color = I("blue")
) %>%
add_lines(
x = ~popularity_mean,
y = ~lm(total_albums ~ popularity_mean, data = live_albums_sum_by_artist)$fitted.values,
line = list(color = 'red'),
name = "Regression Line"
) %>%
layout(
title = "Artist Popularity vs Total 'Live' Albums",
xaxis = list(title = "Artist Popularity"),
yaxis = list(title = "Total Number of 'Live' Albums")
)
# Print the plot
live_albums_popularity_tracks
# Graph 14) Scatter plot: Number of 'live' albums vs Popularity
# Filter albums with names containing 'Live' or 'live'
live_albums_data <- albums_final_data %>%
filter(str_detect(album_name, "(?i)live"))
# Sum the number of observations for each artist
live_albums_sum_by_artist <- live_albums_data %>%
group_by(artist) %>%
summarize(total_albums = n(), popularity_mean = mean(popularity))
# Sum the number of activities and calculate the mean popularity by total_albums
activity_sum_by_total_albums <- live_albums_sum_by_artist %>%
group_by(total_albums) %>%
summarize(popularity_mean = mean(popularity_mean))
# Create an interactive scatter plot
live_albums_popularity_tracks <- plot_ly(
data = activity_sum_by_total_albums,
x = ~popularity_mean,
y = ~total_albums,
text = ~paste("Total 'Live' Albums: ", total_albums),
type = "scatter",
mode = "markers",
color = I("blue")
) %>%
layout(
title = "Graph 14. Mean Popularity vs Total 'Live' Albums",
xaxis = list(title = "Mean Popularity"),
yaxis = list(title = "Total Number of 'Live' Albums")
)
# Print the plot
live_albums_popularity_tracks
# Graph 14) Scatter plot: Number of 'live' albums vs Popularity
# Filter albums with names containing 'Live' or 'live'
live_albums_data <- albums_final_data %>%
filter(str_detect(album_name, "(?i)live"))
# Sum the number of observations for each artist
live_albums_sum_by_artist <- live_albums_data %>%
group_by(artist) %>%
summarize(total_albums = n(), popularity_mean = mean(popularity))
# Sum the number of activities and calculate the mean popularity by total_albums
activity_sum_by_total_albums <- live_albums_sum_by_artist %>%
group_by(total_albums) %>%
summarize(popularity_mean = mean(popularity_mean))
# Create an interactive scatter plot
live_albums_popularity_tracks <- plot_ly(
data = activity_sum_by_total_albums,
x = ~popularity_mean,
y = ~total_albums,
text = ~paste("Total 'Live' Albums: ", total_albums),
type = "scatter",
mode = "markers",
color = I("blue")
) %>%
add_lines(
x = ~popularity_mean,
y = ~lm(total_albums ~ popularity_mean, data = activity_sum_by_total_albums)$fitted.values,
line = list(color = 'red'),
name = "Regression Line"
) %>%
layout(
title = "Graph 14. Mean Popularity vs Total 'Live' Albums",
xaxis = list(title = "Mean Popularity"),
yaxis = list(title = "Total Number of 'Live' Albums")
)
# Print the plot
live_albums_popularity_tracks
